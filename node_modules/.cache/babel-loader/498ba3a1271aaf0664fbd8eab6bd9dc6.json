{"ast":null,"code":"var _jsxFileName = \"/Users/ztlab117/Desktop/Vihang/React JS/redux-toolkit-project-main/src/components/MovieCard.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./MovieCard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst IMGPATH = \"https://image.tmdb.org/t/p/w1280\";\n\nconst MovieCard = props => {\n  _s();\n\n  const {\n    data\n  } = props;\n  const history = useHistory(); // Use optional chaining to safely access nested properties\n\n  const imageUrl = data === null || data === void 0 ? void 0 : data.imageurl;\n  const title = data === null || data === void 0 ? void 0 : data.title;\n  const releaseYear = data === null || data === void 0 ? void 0 : data.released;\n  const movieId = data === null || data === void 0 ? void 0 : data.imdbid; // Assuming you have an ID for each movie\n\n  const genres = (data === null || data === void 0 ? void 0 : data.genres) || []; // Assuming genres is an array\n\n  const handleClick = () => {\n    history.push(`/movie/${movieId}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    onClick: handleClick,\n    style: {\n      cursor: 'pointer'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"    \",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"    \",\n        children: imageUrl ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: imageUrl,\n          className: \"img\",\n          alt: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n          src: IMGPATH,\n          className: \"img\",\n          alt: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"textBox\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [releaseYear, \" \\xA0 \\xA0 \\xA0 type: \", data.type]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              margin: '10px 0px'\n            },\n            children: [\"synopsis: \", data.synopsis]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Genres:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"genres\",\n            children: data === null || data === void 0 ? void 0 : data.genre.map((genre, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"genre-tag\",\n              children: genre\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MovieCard, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});\n\n_c = MovieCard;\nexport default MovieCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieCard\");","map":{"version":3,"sources":["/Users/ztlab117/Desktop/Vihang/React JS/redux-toolkit-project-main/src/components/MovieCard.js"],"names":["React","useHistory","IMGPATH","MovieCard","props","data","history","imageUrl","imageurl","title","releaseYear","released","movieId","imdbid","genres","handleClick","push","cursor","type","margin","synopsis","genre","map","index"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAO,iBAAP;;AAEA,MAAMC,OAAO,GAAG,kCAAhB;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AACzB,QAAM;AAAEC,IAAAA;AAAF,MAAWD,KAAjB;AACA,QAAME,OAAO,GAAGL,UAAU,EAA1B,CAFyB,CAIzB;;AACA,QAAMM,QAAQ,GAAGF,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEG,QAAvB;AACA,QAAMC,KAAK,GAAGJ,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEI,KAApB;AACA,QAAMC,WAAW,GAAGL,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEM,QAA1B;AACA,QAAMC,OAAO,GAAGP,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEQ,MAAtB,CARyB,CAQK;;AAC9B,QAAMC,MAAM,GAAG,CAAAT,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAES,MAAN,KAAgB,EAA/B,CATyB,CASU;;AAEnC,QAAMC,WAAW,GAAG,MAAM;AACtBT,IAAAA,OAAO,CAACU,IAAR,CAAc,UAASJ,OAAQ,EAA/B;AACH,GAFD;;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAsB,IAAA,OAAO,EAAEG,WAA/B;AAA4C,IAAA,KAAK,EAAE;AAAEE,MAAAA,MAAM,EAAE;AAAV,KAAnD;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,kBACKV,QAAQ,gBACL;AAAK,UAAA,GAAG,EAAEA,QAAV;AAAoB,UAAA,SAAS,EAAC,KAA9B;AAAoC,UAAA,GAAG,EAAEE;AAAzC;AAAA;AAAA;AAAA;AAAA,gBADK,gBAGL;AAAK,UAAA,GAAG,EAAEP,OAAV;AAAmB,UAAA,SAAS,EAAC,KAA7B;AAAmC,UAAA,GAAG,EAAEO;AAAxC;AAAA;AAAA;AAAA;AAAA;AAJR;AAAA;AAAA;AAAA;AAAA,cADJ,eAQI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,kCACI;AAAA,sBAAKA;AAAL;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA,uBAAIC,WAAJ,4BAA6CL,IAAI,CAACa,IAAlD;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAG,YAAA,KAAK,EAAE;AAAEC,cAAAA,MAAM,EAAE;AAAV,aAAV;AAAA,qCAA6Cd,IAAI,CAACe,QAAlD;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAKI;AAAK,YAAA,SAAS,EAAC,QAAf;AAAA,sBACKf,IADL,aACKA,IADL,uBACKA,IAAI,CAAEgB,KAAN,CAAYC,GAAZ,CAAgB,CAACD,KAAD,EAAQE,KAAR,kBACb;AAAkB,cAAA,SAAS,EAAC,WAA5B;AAAA,wBAAyCF;AAAzC,eAAWE,KAAX;AAAA;AAAA;AAAA;AAAA,oBADH;AADL;AAAA;AAAA;AAAA;AAAA,kBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA0BH,CAzCD;;GAAMpB,S;UAEcF,U;;;KAFdE,S;AA2CN,eAAeA,SAAf","sourcesContent":["import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./MovieCard.css\";\n\nconst IMGPATH = \"https://image.tmdb.org/t/p/w1280\";\n\nconst MovieCard = (props) => {\n    const { data } = props;\n    const history = useHistory();\n\n    // Use optional chaining to safely access nested properties\n    const imageUrl = data?.imageurl;\n    const title = data?.title;\n    const releaseYear = data?.released;\n    const movieId = data?.imdbid; // Assuming you have an ID for each movie\n    const genres = data?.genres || []; // Assuming genres is an array\n\n    const handleClick = () => {\n        history.push(`/movie/${movieId}`);\n    };\n\n    return (\n        <div className=\"card\" onClick={handleClick} style={{ cursor: 'pointer' }}>\n            <div className=\"    \">\n                <div className=\"    \">\n                    {imageUrl ? (\n                        <img src={imageUrl} className=\"img\" alt={title} />\n                    ) : (\n                        <img src={IMGPATH} className=\"img\" alt={title} />\n                    )}\n                </div>\n                <div className=\"textBox\">\n                    <div className=\"card-info\">\n                        <h4>{title}</h4>\n                        <p>{releaseYear} &nbsp; &nbsp; &nbsp; type: {data.type}</p>\n                        <p style={{ margin: '10px 0px' }}>synopsis: {data.synopsis}</p>\n                        <p>Genres:</p>\n                        <div className=\"genres\">\n                            {data?.genre.map((genre, index) => (\n                                <span key={index} className=\"genre-tag\">{genre}</span>\n                            ))}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default MovieCard;\n"]},"metadata":{},"sourceType":"module"}